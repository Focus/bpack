#!/bin/bash
# 
# BINPACK (c) 2009 Bati Sengul <batieatworld@gmail.com>
#
# I hereby let you (presumably a user) to use, modify and redistribute the software
# with no conditions imposed. It would be nice to let me know if you do plan to
# modify and redistribute.
#
#

rm -rf /tmp/binpack/
mkdir -p /tmp/binpack/package/
version=0.1
ret="default"

getname (){
	temp=$1
#Remove the 2.5-8 and such and make it 2.5.8
	index=${temp%[0-9]-[0-9]*}
	while [ ${#temp} -gt ${#index} ]
	do
		temp=${temp:0:${#index}+1}.${temp:${#index}+2}
		index=${temp%[0-9]-[0-9]*}
	done
#Remove the rc
	index=${temp%[0-9]rc[0-9]*}
	while [ ${#temp} -gt ${#index} ]
	do
		temp=${temp:0:${#index}+1}.${temp:${#index}+3}
		index=${temp%[0-9]rc[0-9]*}
	done
#Remove the beta
	index=${temp%[0-9]beta-[0-9]*}
	while [ ${#temp} -gt ${#index} ]
	do
		temp=${temp:0:${#index}+1}.${temp:${#index}+6}
		index=${temp%[0-9]beta-[0-9]*}
	done
#Remove the git 
	index=${temp%[0-9]git[0-9]*}
	while [ ${#temp} -gt ${#index} ]
	do
		temp=${temp:0:${#index}+1}.${temp:${#index}+4}
		index=${temp%[0-9]git[0-9]*}
	done
	ret=$temp
}

paclate (){
	case $1 in
		*)
		ret=$1
		;;
	esac
}

installdeps (){
	i=1
	j=1
	for dep in ${deps[*]}
	do
		index=${dep#*-[0-9]}
		if [ ${#index} -eq ${#dep} ]
		then
			ver="0"
			pack=$dep
		else
			ver=${dep:${#dep}-${#index}-1}
			pack=${dep:0:${#dep}-${#ver}-1}
		fi
		installed=0
		for got in $( ls /var/bpack/installed/ | grep $pack )
		do
			index=${got#*-[0-9]}
			if [ ${#index} -eq ${#got} ]
			then
				if [ "$got" = "$pack" ]; then
					installed=1
					break
				fi
			else
				gver=${got:${#got}-${#index}-1}
				gpack=${got:0:${#got}-${#gver}-1}
				if [ $gpack == $pack ]; then
					installed=-1
					if [ $( versioncmp $gver $ver) -gt "-1" ]; then
						installed=1
						break
					fi
				fi
			fi
		done
		if [ $installed -eq 0 ]; then
			paclate $pack
			need[$i]=$ret
			needver[$i]=$ver
			let i=i+1
		elif [ $installed -eq -1 ]; then
			paclate $pack
			update[$j]=$ret
			updatever[$j]=$ver
			let j=j+1
		fi
	done
	if [ ${#need[*]} -gt 0 ]; then
		echo "The following packages will need to be installed: ${need[@]}"
	fi
	if [ ${#update[*]} -gt 0 ]; then
		echo "The following packages will need to be upgraded: ${update[@]}"
	fi
	echo -n "Would you like to install these dependencies? [y/n/q]:"
	read -n 1 input
	echo ""
	if [ "$input" == "n" ]; then
		return
	elif [ "$input" == "q" ]; then
		exit 0
	fi
	for i in ${!need[*]}
	do
		needy=-10
		dep=${need[$i]}
		for bhas in $( ls /var/bpack/packs/ | grep $dep )
		do
			index=${bhas#*-[0-9]}
			bver=${bhas:${#bhas}-${#index}-1}
			bname=${bhas:0:${#bhas}-${bver}-1}
			if [ $bname == $dep ] && [ $( versioncmp $bver ${needver[$i]} )]; then
				needy=`bpack install $bname`
			fi
		done
		if [ $needy -eq -10 ]; then
			echo "Package $dep not found!"
			echo -n "Would you like to carry on? [Y/n]:"
			read -n 1 input
			echo ""
			if [ "$input" == "n" ]; then
				exit 0
			fi
		elif [ $needy -ne 0 ]; then
			echo "Package $dep not installed correctly!"
			echo -n "Would you like to carry on? [Y/n]:"
			read -n 1 input
			echo ""
			if [ "$input" == "n" ]; then
				exit 0
			fi
		fi
	done
	for i in ${!update[*]}
	do
		needy=-10
		dep=${update[$i]}
		for bhas in $( ls /var/bpack/packs/ | grep $dep )
		do
			index=${bhas#*-[0-9]}
			bver=${bhas:${#bhas}-${#index}-1}
			bname=${bhas:0:${#bhas}-${bver}-1}
			if [ $bname == $dep ] && [ $( versioncmp $bver ${updatever[$i]} ) ]; then
				needy=`bpack upgrade $bname`
			fi
		done
		if [ $needy -eq -10 ]; then
			echo "Package $dep not found!"
			echo -n "Would you like to carry on? [y/n]:"
			read -n 1 input
			echo ""
			if [ "$input" == "n" ]; then
				exit 0
			fi
		elif [ $needy -ne 0 ]; then
			echo "Package $dep not upgraded correctly!"
			echo -n "Would you like to carry on? [y/n]:"
			read -n 1 input
			echo ""
			if [ "$input" == "n" ]; then
				exit 0
			fi
		fi
	done
}

pacman (){
	first="${1%'-i686.pkg.tar.gz'}"
	name=${first#*/}
	while [ `expr index "$name" /` -gt 0 ]
	do
		name=${name#*/}
	done
	getname $name
	name=$ret
	tar xvf $1 -C /tmp/binpack/package/ > /tmp/binpack/log  || (echo "Cannot extract the package!"; exit 0)
	echo "Checking dependencies..."
	i=1
	for line in $( grep '^depend = ' /tmp/binpack/package/.PKGINFO | sed s/'^depend = '//)
	do
		index=${line%[a-z]>=[0-9]*}
		if [ ${#index} -eq ${#line} ]
		then
			getname $line
			deps[$i]="$ret"
		else
			getname ${line:0:${#index}+1}-${line:${#index}+3}
			deps[$i]="$ret"
		fi
		let i=i+1
	done
	installdeps
	rm -f /tmp/binpack/package/.[A-Z]*
	sed -i '/^\./d' /tmp/binpack/log
	sed -i '/\/$/d' /tmp/binpack/log
	sed -i 's/^/\//' /tmp/binpack/log
	cp -rf /tmp/binpack/package/* /
	cp /tmp/binpack/log /var/bpack/installed/$name
	echo $name >> /var/bpack/list
	echo "Package $name is installed."
	rm -rf /tmp/binpack/
}

case $1 in
	-h| --help)
	echo "Binpack version $version"
	echo -e "\t Author:  Bati Sengul <batieatworld@gmail.com>"
	echo -e "Binpack is a binary helper for bpack.\nUsage:"
	echo -e "\tbinpack [file]\n\n"
	echo "Currently supports .deb and .pkg.tar.gz extensions"
	exit 0
	;;
	--version)
	echo "Binpack version $version"
	echo -e "\tAuthor: Bati Sengul <batieatworld@gmail.com>"
	exit 0
	;;
	*i686.pkg.tar.gz)
	if [ ! -f $1 ]
	then
		echo "File $1 does not exist!"
		exit 0
	fi
	pacman $1
	;;
	-c| --clean)
	getname $2
	echo $ret
	exit 0
	;;
	*)
	echo -e "Usage:\n\tbinpack [file]\n"
	echo "Supported files: *i686.pkg.tar.gz"
	exit 0
	;;
esac

